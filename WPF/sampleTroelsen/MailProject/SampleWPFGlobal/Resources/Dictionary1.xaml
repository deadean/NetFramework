<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key ="BasicControlStyle1">
        <Setter Property = "Control.FontSize" Value ="14"/>
        <Setter Property = "Control.Height" Value = "40"/>
        <Setter Property = "Control.Cursor" Value = "Help"/>
    </Style>

    <RadialGradientBrush x:Key="myBrushButton">
            <GradientStop Color="#FFC44EC4" Offset="0" />
            <GradientStop Color="#FF829CEB" Offset="1" />
            <GradientStop Color="#FF793879" Offset="0.669" />
        </RadialGradientBrush>

    <Style x:Key ="BasicControlStyle">
            <Setter Property = "Control.FontSize" Value ="14"/>
            <Setter Property = "Control.Height" Value = "40"/>
            <Setter Property = "Control.Cursor" Value = "Hand"/>
        </Style>

    <Style x:Key ="BigGreenButton" TargetType="Button">
        <Setter Property = "FontSize" Value ="20"/>
        <Setter Property = "Height" Value = "100"/>
        <Setter Property = "Width" Value = "100"/>
        <Setter Property = "Background" Value = "DarkGreen"/>
        <Setter Property = "Foreground" Value = "Yellow"/>
    </Style>

    <!-- This style is based on BigGreenButton. -->
    <Style x:Key ="TiltButton" TargetType="Button" BasedOn = "{StaticResource BigGreenButton}">
        <Setter Property = "Foreground" Value = "White"/>
        <Setter Property = "RenderTransform">
            <Setter.Value>
                <RotateTransform Angle = "20"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="TextBox">
        <Setter Property = "FontSize" Value ="14"/>
        <!--<Setter Property = "Width" Value = "100"/>
        <Setter Property = "Height" Value = "30"/>-->
        <Setter Property = "MinHeight" Value = "30"/>
        <Setter Property = "BorderThickness" Value = "5"/>
        <Setter Property = "BorderBrush" Value = "Red"/>
        <Setter Property = "FontStyle" Value = "Italic"/>
        <Style.Triggers>
            <Trigger Property = "IsFocused" Value = "True">
                <Setter Property = "Background" Value = "Yellow"/>
            </Trigger>
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property = "IsFocused" Value = "True"/>
                    <Condition Property = "IsMouseOver" Value = "True"/>
                </MultiTrigger.Conditions>
                <Setter Property = "Background" Value = "Red"/>
            </MultiTrigger>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard TargetProperty = "Height">
                            <DoubleAnimation From = "40" To = "200" Duration = "0:0:2" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>-->
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ButtonControlTemplate1" TargetType="{x:Type Button}">
        <Grid x:Name="controlLayout">
            <Ellipse x:Name="buttonSurface" Fill="{TemplateBinding Background}"/>
            <Label x:Name="buttonCaption" Content="{TemplateBinding Content}" FontSize="20" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property = "IsMouseOver" Value = "True">
                <Setter TargetName = "buttonSurface" Property = "Fill" Value = "Blue"/>
                <Setter TargetName = "buttonCaption" Property = "Foreground" Value = "Yellow"/>
            </Trigger>
            <Trigger Property = "IsPressed" Value="True">
                <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                <Setter TargetName="controlLayout" Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- This button template will display whatever is set to the Content of the hosting button. -->
    <ControlTemplate x:Key="NewRoundButtonTemplate" TargetType="Button">
        <Grid>
            <Ellipse Fill="{TemplateBinding Background}"/>
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
    </ControlTemplate>

    <!-- A style containing a template. -->
    <Style x:Key ="RoundButtonStyle" TargetType ="Button">
        <Setter Property ="Foreground" Value ="Black"/>
        <Setter Property ="FontSize" Value ="14"/>
        <Setter Property ="FontWeight" Value ="Bold"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="100"/>
        <!-- Here is the template! -->
        <Setter Property ="Template">
            <Setter.Value>
                <ControlTemplate TargetType ="Button">
                    <Grid x:Name="controlLayout">
                        <Ellipse x:Name="buttonSurface" Fill="{TemplateBinding Background}"/>
                        <Label x:Name="buttonCaption" Content ="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property = "IsMouseOver" Value = "True">
                            <Setter TargetName = "buttonSurface" Property = "Fill" Value = "Blue"/>
                            <Setter TargetName = "buttonCaption" Property = "Foreground" Value = "Yellow"/>
                        </Trigger>
                        <Trigger Property = "IsPressed" Value="True">
                            <Setter TargetName="controlLayout" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="controlLayout" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.8" ScaleY="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>