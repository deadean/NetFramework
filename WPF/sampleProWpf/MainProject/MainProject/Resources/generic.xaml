<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:ViewModelLib.Converters;assembly=ViewModelLib"
    xmlns:local1="clr-namespace:MainProject.View.Data"
    xmlns:local="clr-namespace:MainProject.Controls"
    xmlns:wndBase="clr-namespace:MainProject.ViewModel.WindowsPagesRichControl"
    xmlns:behaviours="clr-namespace:ViewModelLib.Behaviours;assembly=ViewModelLib"
    >
    
    <Style TargetType="{x:Type local:CustomColorPickerVersion1}">
        <Setter Property="Template">
            <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:CustomColorPickerVersion1}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                    
                        <!--<Slider Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}" Value="{Binding Path=Red, RelativeSource={RelativeSource TemplatedParent}}"></Slider>
                        <Slider Grid.Row="1" Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}" Value="{Binding Path=Red, RelativeSource={RelativeSource TemplatedParent}}"></Slider>
                        <Slider Grid.Row="2" Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}" Value="{Binding Path=Red, RelativeSource={RelativeSource TemplatedParent}}"></Slider>
                    
                            <Rectangle Grid.Column="1" Grid.RowSpan="3" Margin="{TemplateBinding Padding}" Width="50" Stroke="Black" StrokeThickness="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{Binding Path=Color, RelativeSource={RelativeSource TemplatedParent}}">
                                    </SolidColorBrush>
                                </Rectangle.Fill>
                            </Rectangle>-->

                            <Slider Name="PART_RedSlider" Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}"></Slider>
                            <Slider Grid.Row="1" Name="PART_GreenSlider" Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}"></Slider>
                            <Slider Grid.Row="2" Name="PART_BlueSlider" Minimum="0" Maximum="255" Margin="{TemplateBinding Padding}"></Slider>

                            <Rectangle Grid.Column="1" Grid.RowSpan="3" Margin="{TemplateBinding Padding}" Width="50" Stroke="Black" StrokeThickness="1">
                                <Rectangle.Fill>
                                    <SolidColorBrush x:Name="PART_PreviewBrush"></SolidColorBrush>
                                </Rectangle.Fill>
                            </Rectangle>

                        
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
</Style>

    <Style TargetType="{x:Type local:FlipPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:FlipPanel">
                    <Grid>
                        <Grid.Resources>
                                <Storyboard x:Key="beginStoryboard1">
                                    <DoubleAnimation Storyboard.TargetName="PART_BackContent"  Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                                </Storyboard>

                            <Storyboard x:Key="beginStoryboard2">
                                    <DoubleAnimation Storyboard.TargetName="FlipButtonTransform" Storyboard.TargetProperty="Angle" To="90" Duration="0"></DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="PART_FrontContent" Storyboard.TargetProperty="Opacity" To="0" Duration="0"></DoubleAnimation>
                                </Storyboard>
                        </Grid.Resources>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border 
                            x:Name="PART_FrontContent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}">

                            <ContentPresenter Content="{TemplateBinding FronContent}"/>

                        </Border>

                        <Border 
                            x:Name="PART_BackContent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Background="{TemplateBinding Background}">

                            <ContentPresenter Content="{TemplateBinding BackContent}">
                            </ContentPresenter>

                        </Border>

                        <ToggleButton Grid.Row="1" x:Name="FlipButton" Margin="0,10,0,0" RenderTransformOrigin="0.5,0.5" Width="19" Height="19">
                            
                            <ToggleButton.RenderTransform>
                                <RotateTransform x:Name="FlipButtonTransform" Angle="-90"/>
                            </ToggleButton.RenderTransform>
                            
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="ViewStates">
                                                <VisualStateGroup.Transitions>
                                                    
                                                    <VisualTransition GeneratedDuration="0:0:0.7" To="Normal">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="FlipButtonTransform" Storyboard.TargetProperty="Angle" To="-90" Duration="0:0:0.2"></DoubleAnimation>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal" Storyboard="{DynamicResource ResourceKey=beginStoryboard1}"/>
                                                
                                            </VisualStateGroup>

                                            <VisualStateGroup x:Name="FocusStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0:0:0.7" To="Flipped">
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetName="FlipButtonTransform" Storyboard.TargetProperty="Angle" To="90" Duration="0:0:0.2"></DoubleAnimation>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Flipped" Storyboard="{DynamicResource ResourceKey=beginStoryboard2}"/>
                                            </VisualStateGroup>

                                        </VisualStateManager.VisualStateGroups>
                                        <Ellipse Stroke="#FFA9A9A9" Fill="AliceBlue"/>
                                        <Path Data="M1,1.5L4.5,5 8,1.5" Stroke="#FF666666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            
                        </ToggleButton>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:BestFlipControl}">
        <Style.Resources>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:BooleanToVisibilityInvertedConverter x:Key="BooleanToVisibilityInvertedConverter"/>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:BestFlipControl" x:Name="t1">
                    <Border Height="{TemplateBinding Property=Height}" Width="{TemplateBinding Property=Width}" BorderThickness="1" BorderBrush="red">
                        
                        <Grid>
                            
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Canvas Grid.Row="0">
                                <StackPanel Height="{TemplateBinding Property=Height}" Width="{TemplateBinding Property=Width}" 
                                         >
                                    <ContentControl Content="{TemplateBinding Property=BackContent}" x:Name="back"/>
                                </StackPanel>

                                <StackPanel Height="{TemplateBinding Property=Height}" Width="{TemplateBinding Property=Width}" 
                                         >
                                    <ContentControl Content="{TemplateBinding Property=FronContent}" x:Name="front"/>
                                </StackPanel>
                            </Canvas>

                            <Grid Grid.Row="1" Height="30">
                                <Button Content="Up" Command="{Binding ChangeFlipCommand}">
                                    <Button.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ParallelTimeline>
                                                        <DoubleAnimation Storyboard.TargetName="back" Storyboard.TargetProperty="Height" From="50" To="0" Duration="0:0:3" />
                                                    </ParallelTimeline>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Button.Triggers>
                                </Button>
                            </Grid>

                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey 
        TypeInTargetAssembly={x:Type local1:TileView},
        ResourceId=myPlainViewDSK}" 
         TargetType="{x:Type ListView}" 
         BasedOn="{StaticResource {x:Type ListBox}}"
         >
        <Setter Property="HorizontalContentAlignment"
            Value="Center"/>
        <Setter Property="ItemContainerStyle" 
            Value="{Binding (ListView.View).ItemContainerStyle,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemTemplate" 
            Value="{Binding (ListView.View).ItemTemplate,
            RelativeSource={RelativeSource Self}}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth),
                     RelativeSource={RelativeSource 
                                     AncestorType=ScrollContentPresenter}}"
                     ItemWidth="{Binding (ListView.View).ItemWidth,
                     RelativeSource={RelativeSource AncestorType=ListView}}"
                     MinWidth="{Binding (ListView.View).ItemWidth,
                     RelativeSource={RelativeSource AncestorType=ListView}}"
                     ItemHeight="{Binding (ListView.View).ItemHeight,
                     RelativeSource={RelativeSource AncestorType=ListView}}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local1:TileView}, ResourceId=TileView}" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="BorderBrush" Value="Black"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"></Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}">
                    </WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type local1:TileView}, ResourceId=TileViewItem}" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        <Setter Property="ContentTemplate" Value="{Binding Path=View.ItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}}"></Setter>
    </Style>
    
    <Style x:Key="styleBaseWindow" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Width="Auto" Height="Auto" Name="windowFrame" BorderBrush="#395984" BorderThickness="1" >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#E7EBF7" Offset="0.0"/>
                                        <GradientStop Color="#CEE3FF" Offset="0.5"/>
                                    </GradientStopCollection>
                                </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>

                        <Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <StackPanel Background="DarkBlue" Height="30" HorizontalAlignment="Stretch" behaviours:ControlBehaviour.MouseLeftButtonDown="{Binding WindowDragMoveCommand}" />
                            <Grid Grid.Row="1" Background="#B5CBEF">
                                <AdornerDecorator>
                                    <ContentPresenter></ContentPresenter>
                                </AdornerDecorator>
                            </Grid>
                            <TextBlock Grid.Row="2" Text="Footer" Margin="1,10,1,1" Padding="5" HorizontalAlignment="Center"></TextBlock>

                            <Rectangle Grid.RowSpan="3" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Right" Cursor="SizeWE" Fill="Transparent" 
                                       behaviours:ControlBehaviour.MouseLeftButtonDown="{Binding WindowDragMoveCommand}"
                                       />

                            <ResizeGrip Name="WindowResizeGrip" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />

                        </Grid>
                    </Border>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="styleBaseWindow2" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Topmost" Value="True"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Ellipse Fill="Lime" Width="100" Height="100">
                        
                    </Ellipse>
                    <!--<Border Width="Auto" Height="Auto" Name="windowFrame" BorderBrush="#395984" BorderThickness="1" CornerRadius="45" >
                        <Border.Background>
                            <LinearGradientBrush>
                                <GradientBrush.GradientStops>
                                    <GradientStopCollection>
                                        <GradientStop Color="#E7EBF7" Offset="0.0"/>
                                        <GradientStop Color="#CEE3FF" Offset="0.5"/>
                                    </GradientStopCollection>
                                </GradientBrush.GradientStops>
                            </LinearGradientBrush>
                        </Border.Background>-->

                        <!--<Grid>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>

                            <StackPanel Background="DarkBlue" Height="30" HorizontalAlignment="Stretch" behaviours:ControlBehaviour.MouseLeftButtonDown="{Binding WindowDragMoveCommand}" />
                            <Grid Grid.Row="1" Background="#B5CBEF">
                                <AdornerDecorator>
                                    <ContentPresenter></ContentPresenter>
                                </AdornerDecorator>
                            </Grid>
                            <TextBlock Grid.Row="2" Text="Footer" Margin="1,10,1,1" Padding="5" HorizontalAlignment="Center"></TextBlock>

                            <Rectangle Grid.RowSpan="3" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Right" Cursor="SizeWE" Fill="Transparent" 
                                       behaviours:ControlBehaviour.MouseLeftButtonDown="{Binding WindowDragMoveCommand}"
                                       />

                            <ResizeGrip Name="WindowResizeGrip" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="False" />

                        </Grid>-->
                    <!--</Border>-->

                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>-->

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>